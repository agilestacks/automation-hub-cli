// Code generated by go-bindata. DO NOT EDIT.
//  memcopy: true
//  compress: true
//  decompress: once
//  metadata: true
//  asset-dir: true
//  restore: true
// sources:
//  meta/hub-well-known-parameters.yaml
//  src/hub/api/requests/eks-adapter-instance.json.template
//  src/hub/api/requests/eks-adapter-template.json.template
//  src/hub/api/requests/k8s-aws-adapter-instance.json.template
//  src/hub/api/requests/k8s-aws-adapter-template.json.template
//  src/hub/api/requests/metal-adapter-instance.json.template
//  src/hub/api/requests/metal-adapter-template.json.template
//  src/hub/initialize/hub.yaml.template
//  src/hub/initialize/hub-component.yaml.template

package bindata

import (
	"bytes"
	"compress/flate"
	"io"
	"os"
	"path/filepath"
	"strings"
	"sync"
	"time"

	"github.com/tmthrgd/go-bindata/restore"
)

type asset struct {
	name string
	data string
	size int64
	mode os.FileMode
	time time.Time

	once  sync.Once
	bytes []byte
	err   error
}

func (a *asset) Name() string {
	return a.name
}

func (a *asset) Size() int64 {
	return a.size
}

func (a *asset) Mode() os.FileMode {
	return a.mode
}

func (a *asset) ModTime() time.Time {
	return a.time
}

func (*asset) IsDir() bool {
	return false
}

func (*asset) Sys() interface{} {
	return nil
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]*asset{
	"meta/hub-well-known-parameters.yaml": &asset{
		name: "hub-well-known-parameters.yaml",
		data: "" +
			"\x8c\x93\x4d\x6e\xeb\x30\x0c\x84\xf7\x3e\x05\x2f\xe0\x1c\xc0\xbb\xf7\x9a\x45\x81\x00\x46\x51\x77" +
			"\xd5\x1d\x25\x31\xad\x1a\xfd\x04\x94\x94\xc2\xb7\x2f\x1c\x4b\xb1\xe2\x24\x40\x36\x06\x2c\xce\x37" +
			"\x34\xe9\x51\xdb\xb6\xcd\x11\x19\x2d\x45\xe2\xd0\x35\x2d\x38\xb4\xd4\x81\x34\x3e\xa9\x06\x40\xb0" +
			"\xa6\x7d\x07\x2f\xf9\xf5\xa0\x9d\xea\x20\x05\xe2\x06\xa0\xe6\x00\x0a\x39\x49\x1a\x80\x6b\x14\x76" +
			"\xe5\x54\xd1\x1e\x93\x89\x1d\xe0\x6f\xa8\xa8\x23\xfb\x93\x56\x67\xdb\x15\xf9\x56\x57\x1e\xd0\x28" +
			"\xa5\x4f\x2e\xde\xc2\xff\xe6\x02\xf4\xc9\x0a\x62\xf0\x3c\xd9\xfd\x90\x8c\x15\xcc\xf4\xa5\xbd\xbb" +
			"\x65\xdf\xcb\xf9\xa5\xcb\x09\xb5\x41\xa1\x8d\x8e\xe3\xa7\x77\x74\xa7\x5d\xa5\x80\x2c\x29\x74\x08" +
			"\xdf\x3b\x1a\x6b\x66\x18\x5e\x61\x47\x23\xf4\x68\xe9\xb2\x78\xe5\xc2\xb2\xf6\x6d\x3f\x3c\xb7\xf4" +
			"\xe9\x59\x5b\x6f\xfb\x61\xb6\xbd\x5a\x5a\xa4\x50\x0f\x2e\x30\xd0\xd6\x5b\xd4\x6e\x8d\xfe\xc7\x40" +
			"\x50\x95\x2e\x0e\x21\xa2\x3c\x84\x8d\x22\xa3\x4f\xc4\x63\x65\xa6\xee\x1a\x65\x8f\x22\x8a\xc4\x8c" +
			"\x7b\xcf\x76\x23\x92\x3c\x50\x5c\x26\xfd\x28\x95\xa9\x45\x24\x30\x5e\x62\x9c\xd7\xff\xdc\xc4\x6b" +
			"\x83\xb9\x41\x91\x3d\xfe\xd7\x0f\xb8\x2c\x6c\x44\x72\xca\x50\x75\x31\xe6\xe0\xad\xbf\xe9\x7c\x5d" +
			"\x36\x4b\x0c\xcb\x09\x2f\x19\xca\x92\xdb\x0c\x95\x52\x0e\xc8\x5f\x00\x00\x00\xff\xff",
		size: 914,
		mode: 0644,
		time: time.Unix(1540400209, 965820203),
	},
	"src/hub/api/requests/eks-adapter-instance.json.template": &asset{
		name: "eks-adapter-instance.json.template",
		data: "" +
			"\xa4\xcd\x41\x6a\xc3\x30\x10\x05\xd0\xbd\x4f\x21\x44\x97\x41\x07\x08\x74\xd5\x0b\x74\xd3\x55\xc9" +
			"\x62\x62\xfd\x04\x61\x69\x24\x66\xc6\xa1\x10\x7c\xf7\x52\xdb\x85\x16\x0c\xc1\x64\x27\xfe\xd7\xbc" +
			"\x7f\xef\x9c\x73\xce\x33\x15\xf8\xa3\xf3\x2f\xf7\x9f\xd7\xe4\x0f\x4b\x6c\x28\x2d\x93\xcd\xd5\x6f" +
			"\x06\xbe\x25\xa9\x5c\xc0\xf6\x37\x36\xba\xaa\x3f\xba\x4f\x4f\x91\x9a\x41\x5e\x31\xa8\x3f\xad\x65" +
			"\x23\xa1\x02\x83\xcc\x5f\x96\xcd\x7f\xbb\x91\x35\xc4\x5a\x28\xf1\xea\xcd\xed\x8d\xf2\xb8\x6c\xcf" +
			"\xd9\x74\x70\x1b\xa7\xc3\x78\x86\x30\x0c\x1a\xa8\xa5\x00\x8e\xad\x26\xb6\x67\x9d\x9e\xde\x20\x4f" +
			"\x29\x18\x34\xf4\x79\x54\x83\xec\x66\xfa\x5a\x5a\x65\xb0\x85\xc4\x57\x81\x6a\x18\x25\xbf\x0b\x2e" +
			"\xe9\x6b\xd3\xa2\xd6\xf6\x71\xaa\xf5\xe3\x91\xa8\x7b\xc9\x1c\xc0\x74\xce\x88\x9b\xe2\x85\xb2\x62" +
			"\x25\x4f\xdd\xd4\x7d\x07\x00\x00\xff\xff",
		size: 635,
		mode: 0644,
		time: time.Unix(1535737985, 982401445),
	},
	"src/hub/api/requests/eks-adapter-template.json.template": &asset{
		name: "eks-adapter-template.json.template",
		data: "" +
			"\x94\x92\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x21\x78\x6c\x03\xde\xa4\xe0\x41\xa4\x27\x2f\x05\xf1" +
			"\x24\x3d\xcc\x6e\x5e\x6b\x48\x36\x09\x33\x59\xa9\x94\x7e\x77\xc9\xfe\x29\x08\x45\xed\x29\x43\xde" +
			"\x9b\x5f\x86\x37\x39\x2d\x94\x52\x4a\x47\xea\xa0\xd7\x4a\xdf\x9d\x6a\x75\xd6\xcb\xf1\xda\x42\x5a" +
			"\x76\xb9\xb8\x14\xab\xba\x79\x79\x55\x4f\x96\x72\x01\xcf\x0e\x29\xd4\xfa\xaa\xc1\xcb\x8a\x46\x6d" +
			"\x7d\x3f\xab\x6d\xea\x72\x8a\x88\x45\x36\x91\x9a\x00\xab\xd7\xea\x5d\xfb\x07\x59\xc1\x8b\x5e\x2a" +
			"\x5d\x5c\x08\x15\xa6\x74\x61\xc2\xde\xf9\x5a\x5a\x1c\xeb\xe1\xfb\x06\x2b\x4b\xf2\xd1\x24\x62\xab" +
			"\x77\x13\xf3\x13\xdc\xc8\xc0\xb1\xc8\x21\x7d\x55\x6b\x1f\xa7\x7a\x36\x15\x3a\x8c\x9e\x69\xa4\xc7" +
			"\xfa\xde\x2c\x66\x62\xea\x50\xc0\x83\x65\x4c\xe0\x47\x0a\x36\x8a\xb1\xa9\x23\x17\xf5\x20\x9e\x97" +
			"\xea\x8a\xab\xce\xc7\x11\x05\x62\x28\x3b\x83\x68\x73\x72\xb1\xdc\xd0\xd2\xd2\x33\xf8\xbf\x0d\xf0" +
			"\x62\xda\xd0\x4b\x0d\xff\x97\x8e\x4b\xe4\xc6\xc5\x03\x43\xc4\xf4\x1c\xb6\x8c\xbd\x3b\x4e\x5b\x19" +
			"\x53\xa4\xd0\x0f\x7e\xca\xf9\x36\x9c\x48\x7a\xfb\x8b\x28\xb7\x22\x83\xc1\xf4\x41\xae\x11\xf7\x14" +
			"\x04\x13\xf2\xb2\x61\x50\x27\x5b\x70\xe7\x44\x5c\x8a\xc3\x2a\x77\x8b\xf3\xe2\x3b\x00\x00\xff\xff" +
			"",
		size: 721,
		mode: 0644,
		time: time.Unix(1535737993, 503289582),
	},
	"src/hub/api/requests/k8s-aws-adapter-instance.json.template": &asset{
		name: "k8s-aws-adapter-instance.json.template",
		data: "" +
			"\xac\xcd\xb1\x6a\x33\x31\x10\x04\xe0\xfe\x9e\x42\x88\xbf\xf4\xaf\x3a\x18\x52\xa5\x4c\x93\x26\x55" +
			"\x70\xb1\xb6\xc6\x46\x58\x5a\x89\xdd\x3d\x27\xc1\xdc\xbb\x87\xdc\x5d\x20\x81\x83\x70\x38\x9d\x98" +
			"\x1d\x7d\x73\xed\x9c\x73\xce\x33\x15\xf8\xad\xf3\xff\xae\x9f\xaf\xc1\x6f\xa6\xd8\x50\x5a\x26\x1b" +
			"\x4f\x5f\x19\xf8\x92\xa4\x72\x01\xdb\xf7\xd8\xe8\xa4\x7e\xeb\x5e\x3c\x45\x6a\x06\xb9\x3f\xdf\xe9" +
			"\x7f\x7a\x55\xbf\x9b\x0b\x8d\x84\x0a\x0c\x32\xd6\xa6\xdd\x1f\xdb\x91\x35\xc4\x5a\x28\xf1\x6c\x8e" +
			"\xd7\x0b\xe5\x7e\xda\x1f\xb3\x61\xe3\x16\xbe\x9e\xfb\x3d\x84\x61\xd0\x40\x2d\x05\x70\x6c\x35\xb1" +
			"\xdd\xea\x1c\xe8\x01\x72\xbb\x92\x13\xd8\xfe\x4e\x7a\xc4\xfb\x6a\xe8\x50\x4b\xab\x0c\xb6\x90\xf8" +
			"\x24\x50\x0d\xbd\xe4\x27\xc1\x31\xbd\x2d\x5a\xd4\xda\x3a\x4e\xb5\x3e\xff\x26\xea\x5a\x32\x07\x30" +
			"\xed\x33\xe2\xa2\x78\xa4\xac\x98\xc9\x5d\x37\x74\x1f\x01\x00\x00\xff\xff",
		size: 715,
		mode: 0644,
		time: time.Unix(1535738012, 763732695),
	},
	"src/hub/api/requests/k8s-aws-adapter-template.json.template": &asset{
		name: "k8s-aws-adapter-template.json.template",
		data: "" +
			"\x9c\x92\xc1\x6a\xe3\x40\x0c\x86\xef\x79\x0a\x31\x2c\xec\x25\x31\xec\x2d\x04\xf6\x10\x96\x3d\xe5" +
			"\x12\x08\xa5\x87\x92\x83\xec\x51\xd2\xc1\x63\xcd\x20\x8d\xdb\x84\x90\x77\x2f\x63\x8f\x03\x85\xd0" +
			"\x92\x9e\x2c\xac\x4f\x9f\xc5\x2f\x5f\x66\x00\x00\x86\xb1\x23\xb3\x02\xf3\xeb\x92\xab\xab\x99\x8f" +
			"\xaf\x2d\x69\x23\x2e\x26\x17\x38\x77\xd7\x47\xe7\x69\x97\xb0\x69\x7f\x2b\x6c\x96\x3b\x08\x0c\xeb" +
			"\xe7\x1d\xa0\xc5\x98\x48\xa6\x29\xcd\x44\xe6\xdb\xa5\x2e\x4a\x6f\xf5\x67\xea\x36\xa1\x8b\x81\x89" +
			"\x93\xfe\x67\xac\x3d\x59\xb3\x82\x97\x11\x7d\x57\x33\x07\x93\x9c\xf7\x59\x06\x26\x09\xd2\xc1\xb5" +
			"\xb9\xb4\x74\xca\x8f\xb6\xaf\x69\x61\x51\x5f\xeb\x80\x62\xcd\xbe\x38\xdf\x48\x6a\x1d\x3c\x96\xa2" +
			"\x0f\xe7\x8c\xf6\x5c\xea\x09\x4a\x78\x1c\x99\xb2\xd2\xdf\xe9\x9b\x13\x10\x51\xb0\xa3\x44\x32\x60" +
			"\x63\x32\x9f\xd2\xb1\xac\x95\x0d\x1d\x3a\x36\x43\xf3\x3a\x87\x3b\x54\xde\x51\x98\x12\x69\x85\xd1" +
			"\x55\x0d\xfe\x23\x49\x8f\x0c\x78\x47\x9c\x7e\x34\xb4\xa1\xf3\x57\x33\xb7\xe8\x2b\xc7\x47\x21\xd5" +
			"\xaa\x17\xbf\x15\x3a\xb8\x53\xb9\xce\x98\x26\xfa\x7e\xe0\x31\xc6\xc7\x74\xaa\xe1\xe9\x3b\xa3\x3e" +
			"\xaa\xf4\x15\x95\x1f\xe5\x9e\xf1\x80\x5e\xa9\x28\x6f\x97\x26\xec\x74\x4b\xd2\x39\x55\x17\x78\x38" +
			"\xe7\x7e\x76\x9d\x7d\x04\x00\x00\xff\xff",
		size: 749,
		mode: 0644,
		time: time.Unix(1535738018, 856361221),
	},
	"src/hub/api/requests/metal-adapter-instance.json.template": &asset{
		name: "metal-adapter-instance.json.template",
		data: "" +
			"\xac\xce\xb1\x6a\xf3\x30\x14\x05\xe0\xdd\x4f\x21\xc4\x3f\x06\x3d\x40\xe0\x9f\x3a\x95\x2e\x5d\x3a" +
			"\x95\x0c\x37\xd6\x49\x10\x95\xae\xc4\xbd\xd7\xa1\x25\xf8\xdd\x4b\x6d\x17\x5a\x30\x14\x93\x6c\xe2" +
			"\x1c\xe9\x3b\xba\x76\xce\x39\xe7\x99\x0a\xfc\xde\xf9\x7f\xd7\xaf\xd3\xe8\x77\x73\x6c\x28\x2d\x93" +
			"\x4d\xd5\x77\x06\xbe\x24\xa9\x5c\xc0\xf6\x33\x36\x3a\xab\xdf\xbb\x57\x4f\x91\x9a\x41\xfe\x17\x18" +
			"\x65\x7f\x58\xea\x46\x42\x05\x06\x99\x2e\xcd\xab\xbf\x96\x23\x6b\x88\xb5\x50\xe2\x45\x9c\xda\x0b" +
			"\xe5\x61\x5e\x9f\xb2\x71\xe7\x56\x9e\xbe\x0d\x47\x08\xc3\xa0\x81\x5a\x0a\xe0\xd8\x6a\x62\xbb\xd5" +
			"\xe9\xe9\x01\x72\xbb\x92\x13\xd8\xee\x27\x3d\xe1\x63\x33\xd4\xd7\xd2\x2a\x83\x2d\x24\x3e\x0b\x54" +
			"\x83\x1a\x59\xea\x1f\xdb\x1d\xa8\x41\xf2\xb3\xe0\x94\xde\x57\x2d\x6a\x6d\xe3\xcf\xb4\xbe\xfc\x25" +
			"\xea\x56\x32\x07\x30\x1d\x33\xe2\xaa\x78\xa2\xac\x58\xc8\x43\x37\x76\x9f\x01\x00\x00\xff\xff",
		size: 788,
		mode: 0644,
		time: time.Unix(1535738026, 50171281),
	},
	"src/hub/api/requests/metal-adapter-template.json.template": &asset{
		name: "metal-adapter-template.json.template",
		data: "" +
			"\x9c\x92\x41\x6b\xe3\x30\x10\x85\xef\xf9\x15\x42\xec\x31\x31\xec\x6d\x09\xec\x61\xb7\xf4\x50\x7a" +
			"\xc9\xa5\xa7\x92\xc3\xd8\x9a\xa4\xc2\xd2\x48\xcc\x8c\x4b\x42\xc8\x7f\x2f\xb2\xec\x40\x21\xb4\xb8" +
			"\x27\x0f\x7e\xef\x7d\x12\x9a\x77\x59\x19\x63\x8c\x25\x88\x68\xb7\xc6\xfe\xba\x94\xe9\x6a\xd7\xf5" +
			"\xb7\x43\xe9\xd8\x67\xf5\x89\x8a\xfa\x1f\x18\x37\x11\x15\x82\xf9\xe7\x20\x2b\xf2\x6c\x14\x85\xae" +
			"\x2f\x96\x51\xdd\x40\x55\xb7\xbf\x67\xbd\x4b\x31\x27\x42\x52\x79\x24\x68\x03\x3a\xbb\x35\xaf\xb6" +
			"\xff\x23\x15\x67\xd7\xc6\xaa\x0f\xa1\x00\x8d\x55\x06\x3c\xf8\xbe\x8c\x0e\x4f\xe5\xd3\x0f\x2d\x6e" +
			"\x1c\xc8\x5b\x9b\x80\x9d\xdd\x4f\xd4\x77\xe4\x56\x46\x92\xc3\x1c\xd2\xb9\x58\x07\x9a\xe6\xd9\xa4" +
			"\x70\xac\x9e\xe9\x52\x7f\xeb\x89\xb3\x9c\x81\x21\xa2\x22\x8f\xa6\xfa\x1c\x9f\x9e\xc4\x91\x34\x2e" +
			"\x45\xf0\x64\x47\xf1\xba\x36\x77\x5c\xe5\x86\x4c\xa8\x28\x0d\x64\xdf\x20\xb9\x9c\x3c\xe9\x82\x48" +
			"\x07\x0f\xc8\x8b\x02\xc1\x23\xe9\x8f\x42\xcf\x78\xfe\x2a\x73\xdb\x56\xe3\xe9\xc8\x28\xd2\x88\x82" +
			"\xfa\xee\x29\x2f\x4b\x0d\x1c\x76\x8c\x07\x7f\x9a\x6a\x50\x97\x06\x61\x18\xfd\x90\x17\xe2\x44\xd2" +
			"\xcb\x77\x44\x59\x8a\x0c\x0d\x4e\x8d\xbc\x47\x3c\x40\x10\x9c\x90\xb7\x42\x21\x44\xd9\x21\x47\x2f" +
			"\xe2\x13\x8d\xbd\xd9\xaf\xae\xab\x8f\x00\x00\x00\xff\xff",
		size: 843,
		mode: 0644,
		time: time.Unix(1535738031, 794026407),
	},
	"src/hub/initialize/hub.yaml.template": &asset{
		name: "hub.yaml.template",
		data: "" +
			"\x7c\x90\xc1\x6e\x33\x21\x0c\x84\xef\x7e\x0a\x1f\xfe\x63\x60\x95\x2b\xaf\x12\xe5\x40\xc0\x2b\xf1" +
			"\x87\xc5\xc8\x98\xad\xa2\xaa\xef\x5e\xb1\x9b\xa6\x4d\x54\x75\x2e\x88\x19\xbe\x01\x6c\x8c\x81\x95" +
			"\xa4\x25\x2e\x0e\x8f\x70\x4d\x25\x3a\x6c\xea\xc3\x15\x16\x52\xef\x00\xb1\xf8\x85\x1c\xfe\x7b\xaf" +
			"\xc2\xff\x29\xe8\x87\x3b\x02\xe2\x45\x12\xcd\x3f\x5d\x40\x8c\xd4\x82\xa4\xaa\x5b\x97\xb5\x16\x10" +
			"\x1b\x77\x09\x34\x5a\x86\x62\x12\x87\x76\x02\x08\xbc\x54\x2e\x54\xb4\x8d\xc8\xdc\xaf\x98\x93\x34" +
			"\x35\x8f\x6c\x83\x7e\x2b\xb0\xd3\x37\x3f\xbd\x42\x90\xd3\x4c\xe1\x16\xf2\x06\xad\x24\x97\xe6\xf0" +
			"\x14\xa9\x66\xbe\x1d\x70\x5f\x8d\x52\xd3\x03\xf6\xb2\x6f\xcf\x80\xc8\x12\x49\x1c\x9e\x5e\xea\xce" +
			"\x00\xdc\xb5\xf6\x3f\x1f\xea\x62\x69\x36\xf2\xe2\x53\x01\xa8\x5e\xfc\x42\x4a\xf2\x44\x84\xcc\x3d" +
			"\x6e\x9f\x78\xce\x87\xbe\xce\x54\xe1\x35\x45\x92\xbb\x3d\xe6\x39\xfb\x9e\xd5\xa1\x7f\x6b\x0f\x73" +
			"\xf5\xb9\xd3\x6e\x7d\x06\x00\x00\xff\xff",
		size: 444,
		mode: 0644,
		time: time.Unix(1515794706, 303261491),
	},
	"src/hub/initialize/hub-component.yaml.template": &asset{
		name: "hub-component.yaml.template",
		data: "" +
			"\x74\x90\xbf\x6e\x02\x31\x0c\xc6\x77\x3f\x85\x85\x98\x2a\x5d\x50\xd7\x6c\x48\xed\xc0\x00\xed\x1b" +
			"\x54\x81\x98\x36\xe5\xe2\x04\xc7\xb9\x05\xf1\xee\xd5\xfd\xa1\x9c\x50\x9b\xc9\xf1\xf7\x7d\xd6\xcf" +
			"\x6e\x9a\x06\x3a\x92\x12\x12\x5b\x7c\x86\x53\x60\x6f\xf1\x90\x62\x4e\x4c\xac\x10\x49\x9d\x05\x44" +
			"\x76\x91\x2c\x2e\x2f\x59\xd2\x37\x1d\xf4\x0a\x88\x7b\x09\x74\x7c\xe8\x95\x54\xe5\x40\x7d\xa0\x7f" +
			"\x3e\x88\x45\xb3\x02\x10\x3a\xd7\x20\x54\x7a\xa1\xc1\x53\xdd\x93\x30\x29\x95\xe1\x1b\xf8\x53\xa8" +
			"\x14\x80\x2c\xa9\x0b\xfe\xe6\x9a\xcd\x85\xec\xc4\x45\x52\x92\x49\x1b\x69\x7e\x29\xcd\x34\xc2\x1c" +
			"\xcf\x9e\x67\x06\xcf\xc5\xf8\x14\x5d\xe0\x01\x88\xb8\xb3\xf8\xf2\xb6\x5d\x6f\x76\x1f\xbb\xf5\xf6" +
			"\xf5\xc1\xd9\x57\x77\xdf\x60\x00\xa5\x98\x5b\xa7\x23\xd3\x31\xb4\x63\xd1\xe7\x16\x4f\xe6\x26\x2e" +
			"\x00\x52\xd5\x5c\xf5\x1f\xba\xfb\x26\xc6\xe5\x30\xe4\xa7\xdb\xad\xdf\x37\x48\xec\x73\x0a\xac\x43" +
			"\xbf\x73\x6d\x25\x8b\x5f\xaa\xd9\xae\x56\xb3\xe0\xf2\xf2\xf7\xb6\x57\xf8\x09\x00\x00\xff\xff",
		size: 449,
		mode: 0644,
		time: time.Unix(1515795479, 848753595),
	},
}

// AssetAndInfo loads and returns the asset and asset info for the
// given name. It returns an error if the asset could not be found
// or could not be loaded.
func AssetAndInfo(name string) ([]byte, os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	a.once.Do(func() {
		fr := flate.NewReader(strings.NewReader(a.data))

		var buf bytes.Buffer
		if _, a.err = io.Copy(&buf, fr); a.err != nil {
			return
		}

		if a.err = fr.Close(); a.err == nil {
			a.bytes = buf.Bytes()
		}
	})
	if a.err != nil {
		return nil, nil, &os.PathError{Op: "read", Path: name, Err: a.err}
	}

	return a.bytes, a, nil
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	a, ok := _bindata[filepath.ToSlash(name)]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	data, _, err := AssetAndInfo(name)
	return data, err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}

	return names
}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	return restore.Asset(dir, name, AssetAndInfo)
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	return restore.Assets(dir, name, AssetDir, AssetAndInfo)
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree

	if name != "" {
		var ok bool
		for _, p := range strings.Split(filepath.ToSlash(name), "/") {
			if node, ok = node[p]; !ok {
				return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
			}
		}
	}

	if len(node) == 0 {
		return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
	}

	rv := make([]string, 0, len(node))
	for name := range node {
		rv = append(rv, name)
	}

	return rv, nil
}

type bintree map[string]bintree

var _bintree = bintree{
	"meta": bintree{
		"hub-well-known-parameters.yaml": bintree{},
	},
	"src": bintree{
		"hub": bintree{
			"api": bintree{
				"requests": bintree{
					"eks-adapter-instance.json.template":     bintree{},
					"eks-adapter-template.json.template":     bintree{},
					"k8s-aws-adapter-instance.json.template": bintree{},
					"k8s-aws-adapter-template.json.template": bintree{},
					"metal-adapter-instance.json.template":   bintree{},
					"metal-adapter-template.json.template":   bintree{},
				},
			},
			"initialize": bintree{
				"hub-component.yaml.template": bintree{},
				"hub.yaml.template":           bintree{},
			},
		},
	},
}
